<%
// Returns the total number of citations
function getNumberOfCitations() {
    return (pp.firstHandCitations + pp.secondHandCitations).toString();
}

// Filters out "Unknown" from the unique fields (there should be at most one),
// and returns the length of the resulting array
function getNumberOfFields() {
    return (pp.uniqueFields.filter(x => x !== "Unknown")).length.toString();
}

// The most notable paper is the one with the highest number of citations.
const mostNotablePaper = pp.papers.sort((a, b) => a.numberOfCitations > b.numberOfCitations)[0];
const mostNotableTitle = mostNotablePaper.title;
const mostNotableJournal = mostNotablePaper.journal;

const clamp = (num, min, max) => Math.min(Math.max(num, min), max);

// Sets the font size based on the length of the string, to make sure the text
// always fits on the page. This is necessary because paper titles can be very long.
function setFontSize(text) {
    return clamp(35/text.length, 0.8, 2).toString() + "rem";
}

const uniqueProjects = getProjects();

// Returns an array of objects containing titles and authors of projects
// in which one or more matches were found by SearchSECO
function getProjects() {
    // Because several matches can originate from the same project,
    // the data are added to a Set. This ensures each project occurs only once
    let uniqueProjects = new Set();
    for(const method of ss.methods) {
        for(const match of method.matches) {
            uniqueProjects.add({project: match.data.project, authors: match.data.authors});
        }
    }

    return Array.from(uniqueProjects.values());
}

// Stringifies the authors array of a project to a comma-separated list
function getAuthors(proj) {
    let authors = "";

    for (let i = 0; i < proj.authors.length; i++) {
        if (i === proj.authors.length - 1) authors += proj.authors[i];
        else authors += proj.authors[i] + ", ";
    }

    return authors;
}


const labels = [
    "Humanities" ,
    "Social Sciences",
    "Natural Sciences",
    "Formal Sciences",
    "Applied Sciences"
]

// Constructs a comma-separated list of labels,
// to be inserted in the chart data (see the <script> block below)
// Simply inserting the labels array directly doesn't work, because the strings
// are inserted as plain text, not as strings.
function getChartLabels() {
    let result = "";

    for (let i = 0; i < labels.length; i++) {
        if (i === labels.length - 1) result += '"' + labels[i] + '"';
        else result += '"' + labels[i] + '", ';
    }

    return result;
}

// Retrieves the number of papers associated with each discipline. The data
// needs to be pushed in the same order as the labels above, because they need to line up.
function getChartData() {
    const data = [];

    const disc = pp.disciplines;

    data.push(disc[labels[0]] ?? 0);
    data.push(disc[labels[1]] ?? 0);
    data.push(disc[labels[2]] ?? 0);
    data.push(disc[labels[3]] ?? 0);
    data.push(disc[labels[4]] ?? 0);

    return data;
}

%>

<div class="ImpactScore" hidden>
    <h1 class="Impact__Title">Impact</h1>
    <div class="ImpactScore__Content">
        <div class="Impact__Row">
            <h2> Papers and Citations</h2>
            <div class="Impact__Row__Content">
                <div class="Impact__Row__Block">
                    <p>Your project was cited</p>
                    <div class="Row__Number"><%- getNumberOfCitations() %></div>
                    <p>times</p>
                </div>
                <div class="Impact__Row__Block">
                    <p>in papers across</p>
                    <div class="Row__Number"><%- getNumberOfFields() %></div>
                    <p>scientific fields</p>
                </div>
                <div class="Impact__Row__Block">
                    <p>The most notable of which was</p>
                    <div class="Row__PaperTitle" style="font-size:<%- setFontSize(mostNotableTitle) %>"><%- mostNotableTitle %></div>
                    <p>from <%- mostNotableJournal %></p>
                </div>
            </div>
        </div>

        <div class="Impact__Row">
            <canvas id="Citations__RadarChart"></canvas>
        </div>

        <div class="Impact__Row">
            <h2>Projects and Reuse</h2>
            <div class="Impact__Row__Content">
                <div class="Impact__Row__Block">
                    <p>Your code made its way into</p>
                    <div class="Row__Number"><%- uniqueProjects.length %></div>
                    <p>other projects</p>
                </div>
                <div class="Impact__Row__Block">
                    <p>The most notable of which was</p>
                    <div class="Row__PaperTitle" style="font-size:<%- setFontSize(uniqueProjects[0].project) %>"><%- uniqueProjects[0].project %></div>
                    <p>by <%- getAuthors(uniqueProjects[0]) %></p>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
<%# The data for the radar chart %>
const data = {
    labels: [<%- getChartLabels() %>],
    datasets: [
        {
            data: [<%- getChartData() %>],
            borderColor: "rgb(170, 85, 183)",
            backgroundColor: "rgba(175, 102, 186, 0.4)",
            pointBackgroundColor: "rgb(175, 102, 186)"
        }]
};

<%#
    Settings for the rdar chart
    The settings for ticks are necessary to hide the labels on the grid.
    Simply setting display to false doesn't work.
%>
const config = {
  type: 'radar',
  data: data,
  options: {
    responsive: true,
    spanGaps: true,
    plugins: {
        legend: false
    },
    scale: {
        ticks: {
            callback: function() {return ""},
            backdropColor: "rgba(0, 0, 0, 0)"
        },
        pointLabels:{
            fontSize: 16
        }
    }
  }
};

<%# Initializes and renders the chart in the canvas with id "Citations__RadarChart" %>
new Chart("Citations__RadarChart", config);

</script>

<style>
.Impact__Title {
    color: #0C281E;
    text-align: center;
    margin: 2%;
    font-size: 2vw;
}

.ImpactScore__Content {
    width: 80%;
    margin: auto;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
}

.Impact__Row h2 {
    margin-top: 0;
}

.Impact__Row__Content {
    display: flex;
    flex-direction: row;
    justify-content: space-between;

}

.Impact__Row__Block .Row__PaperTitle {
    font-weight: bold;
    margin: 0.25vw;
    max-width: 15vw;
    text-align: center;
}

.Impact__Row__Block {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

.Impact__Row__Block p {
    margin: 0;
}

.Impact__Row__Block .Row__Number {
    font-size: 1.75vw;
    font-weight: bold;
    margin: 0.25vw;
}

#Citations__RadarChart {
    margin: 5px;
}

</style>