<div class="Quality">
    <h1>Quality Score</h1>
    <div class="QualityMeter">
        <div class="QualityMeter__Bar">
            <div class="QualityMeter__Score"><%- Math.floor(quality.score) %></div>
            <div class="QualityMeter__Text"><%-
                (() => {
                    if (quality.score < 25) return "awful";
                    else if (quality.score < 50) return "bad";
                    else if (quality.score < 75) return "good";
                    else return "splendid!";
                })() %>
            </div>
        </div>
        <div class="QualityMeter__Circle"></div>
    </div>
    <div class="QualityMetrics">
        <div class="QualityMetrics__ScoreMetric" id="QualityFairness">
            <div class="QualityMetrics__ScoreMetric__Logo">
                <div></div>
                <p>Fairness</p>
            </div>
            <div class="QualityMetrics__ScoreMetric__Bar">
                <div class="QualityMetrics__ScoreMetric__Bar__Start"></div>
                <div class="QualityMetrics__ScoreMetric__Bar__Middle"></div>
                <div class="QualityMetrics__ScoreMetric__Bar__End"></div>
                <h2><%- Math.floor(quality.fairnessScore) %>%</h2>
            </div>
        </div>
        <div class="QualityMetrics__ScoreMetric" id="QualityLicenses">
            <div class="QualityMetrics__ScoreMetric__Logo">
                <div></div>
                <p>Licenses</p>
            </div>
            <div class="QualityMetrics__ScoreMetric__Bar">
                <div class="QualityMetrics__ScoreMetric__Bar__Start"></div>
                <div class="QualityMetrics__ScoreMetric__Bar__Middle"></div>
                <div class="QualityMetrics__ScoreMetric__Bar__End"></div>
                <h2><%- Math.floor(quality.licenseScore) %>%</h2>
            </div>
        </div>
        <div class="QualityMetrics__ScoreMetric" id="QualityMaintainability">
            <div class="QualityMetrics__ScoreMetric__Logo">
                <div></div>
                <p>Maintainability</p>
            </div>
            <div class="QualityMetrics__ScoreMetric__Bar">
                <div class="QualityMetrics__ScoreMetric__Bar__Start"></div>
                <div class="QualityMetrics__ScoreMetric__Bar__Middle"></div>
                <div class="QualityMetrics__ScoreMetric__Bar__End"></div>
                <h2><%- Math.floor(quality.maintainabilityScore) %>%</h2>
            </div>
        </div>
        <div class="QualityMetrics__ScoreMetric" id="QualityDocumentation">
            <div class="QualityMetrics__ScoreMetric__Logo">
                <div></div>
                <p>Documentation</p>
            </div>
            <div class="QualityMetrics__ScoreMetric__Bar">
                <div class="QualityMetrics__ScoreMetric__Bar__Start"></div>
                <div class="QualityMetrics__ScoreMetric__Bar__Middle"></div>
                <div class="QualityMetrics__ScoreMetric__Bar__End"></div>
                <h2><%- Math.floor(quality.documentationScore) %>%</h2>
            </div>
        </div>
        <p>
            Average time to solve issues: <%-
            (() => {
                if(!quality.avgSolveTime) return "-";
                else {
                    let days = Math.ceil(quality.avgSolveTime);
                    return days.toString() + (days === 1 ? " day" : " days");
                }
            })() %>
        </p>
    </div>
</div>

<style>

.Quality {
    width: 100%;
    height: 100%;
    border-radius: 16px;
    display: none;
}

.Quality h1 {
    color: #0C281E;
    text-align: center;
    margin: 2vw;
    font-size: 2vw;
}

.QualityMeter {
    width: 20vw;
    height: 10vw;
    margin: auto;
}

.QualityMeter__Bar {
    position: relative;
    width: 100%;
    height: 100%;
    background-color: green; <%# For browsers that do not support gradients %>
    background: conic-gradient(
        from -90deg at bottom,
        #2D4B3D 0deg, #2D4B3D 43.5deg,
        #D3EEE0 43.5deg, #D3EEE0 45.5deg,
        #3A9068 45.5deg, #3A9068 89deg,
        #D3EEE0 89deg, #D3EEE0 91deg,
        #4BB784 91deg, #4BB784 134.5deg,
        #D3EEE0 134.5deg, #D3EEE0 136.5deg,
        #36DDA1 136.5deg, #36DDA1 180deg
    );
    border-radius: 50% 50% 50% 50% / 100% 100% 0% 0%;
}
.QualityMeter__Bar::before {
    z-index: 2;
    content: "";
    position: absolute;
    width: 18vw;
    height: 9vw;
    bottom: 0;
    left: 5%;
    border-radius: 50% 50% 50% 50% / 100% 100% 0% 0%;
    background-color: #D3EEE0;
}

.QualityMeter__Circle {
    z-index: 3;
    position: relative;
    width: 2vw;
    height: 2vw;
    top: -1vw;
    left: 9vw;
    border-radius: 50%;
    background-color: green;
    transform: translate(
        <%- Math.sin((quality.score / 100 - 0.5) * Math.PI) * 9.5 %>vw,
        <%- Math.cos((quality.score / 100 - 0.5) * Math.PI) * -9.5 %>vw
    );
}
.QualityMeter__Circle::before {
    z-index: 4;
    content: "";
    position: absolute;
    width: 1vw;
    height: 1vw;
    top: 25%;
    left: 25%;
    margin-right: -10vw;
    margin-bottom: -10vw;
    border-radius: 50%;
    background-color: #D3EEE0;
}

.QualityMeter__Score {
    z-index: 5;
    position: absolute;
    font-size: 3.5rem;
    color: #0C281E;
    bottom: 1rem;
    text-align: center;
    width: 100%;
    font-weight: bold;
}

.QualityMeter__Text {
    z-index: 5;
    position: absolute;
    font-size: 1.2rem;
    color: #0C281E;
    bottom: 0;
    text-align: center;
    width: 100%;
}

.QualityMetrics {
    margin: auto;
    margin-top: 4%;
    width: 70%;
    height: calc(100% - 4vw - 2vw*1.488 - 10vw - 8%);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.QualityMetrics__ScoreMetric {
    margin: auto;
    width: 100%;
    height: 15%;
    display: flex;
    flex-direction: row;
    justify-content: center;
}
.QualityMetrics__ScoreMetric__Logo {
    height: 100%;
    width: 20%;
    text-align: center;
}
.QualityMetrics__ScoreMetric__Logo div {
    margin: auto;
    height: 3vw;
    width: 3vw;
    background-color: red;
}
.QualityMetrics__ScoreMetric__Bar {
    height: 40%;
    width: 100%;
    margin: auto;
    display: flex;
    flex-direction: row;
    justify-content: center;
}
.QualityMetrics__ScoreMetric__Bar__Start {
    height: 100%;
    width: 10%;
    margin: auto;
    border: 2px outset #0C281E;
    border-right-style: none;
    border-top-left-radius: 50%;
    border-bottom-left-radius: 50%;
}
.QualityMetrics__ScoreMetric__Bar__Middle {
    height: 100%;
    width: 80%;
    margin: auto;
    border-top: 2px solid #0C281E;
    border-bottom: 2px solid #0C281E;
}
.QualityMetrics__ScoreMetric__Bar__End {
    height: 100%;
    width: 10%;
    margin: auto;
    border: 2px outset #0C281E;
    border-left-style: none;
    border-top-right-radius: 50%;
    border-bottom-right-radius: 50%;
}
.QualityMetrics__ScoreMetric__Bar div {
    background-color: gray; <%# For browsers that do not support gradients %>
}
.QualityMetrics__ScoreMetric__Bar h2 {
    margin: auto;
}

<%
const scoreMetricBarEndsSize = 10;
function scoreMetricBarStartPercentage(score) {
    return score / scoreMetricBarEndsSize * 100;
}
function scoreMetricBarMiddlePercentage(score) {
    return (score - scoreMetricBarEndsSize) / (100 - scoreMetricBarEndsSize - scoreMetricBarEndsSize) * 100;
}
function scoreMetricBarEndPercentage(score) {
    return (score - (100 - scoreMetricBarEndsSize)) / scoreMetricBarEndsSize * 100;
}
%>

#QualityFairness .QualityMetrics__ScoreMetric__Bar__Start {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarStartPercentage(quality.fairnessScore) %>%,
        gray <%- scoreMetricBarStartPercentage(quality.fairnessScore) %>% 100%
    );
}
#QualityFairness .QualityMetrics__ScoreMetric__Bar__Middle {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarMiddlePercentage(quality.fairnessScore) %>%,
        gray <%- scoreMetricBarMiddlePercentage(quality.fairnessScore) %>% 100%
    );
}
#QualityFairness .QualityMetrics__ScoreMetric__Bar__End {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarEndPercentage(quality.fairnessScore) %>%,
        gray <%- scoreMetricBarEndPercentage(quality.fairnessScore) %>% 100%
    );
}

#QualityLicenses .QualityMetrics__ScoreMetric__Bar__Start {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarStartPercentage(quality.licenseScore) %>%,
        gray <%- scoreMetricBarStartPercentage(quality.licenseScore) %>% 100%
    );
}
#QualityLicenses .QualityMetrics__ScoreMetric__Bar__Middle {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarMiddlePercentage(quality.licenseScore) %>%,
        gray <%- scoreMetricBarMiddlePercentage(quality.licenseScore) %>% 100%
    );
}
#QualityLicenses .QualityMetrics__ScoreMetric__Bar__End {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarEndPercentage(quality.licenseScore) %>%,
        gray <%- scoreMetricBarEndPercentage(quality.licenseScore) %>% 100%
    );
}

#QualityMaintainability .QualityMetrics__ScoreMetric__Bar__Start {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarStartPercentage(quality.maintainabilityScore) %>%,
        gray <%- scoreMetricBarStartPercentage(quality.maintainabilityScore) %>% 100%
    );
}
#QualityMaintainability .QualityMetrics__ScoreMetric__Bar__Middle {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarMiddlePercentage(quality.maintainabilityScore) %>%,
        gray <%- scoreMetricBarMiddlePercentage(quality.maintainabilityScore) %>% 100%
    );
}
#QualityMaintainability .QualityMetrics__ScoreMetric__Bar__End {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarEndPercentage(quality.maintainabilityScore) %>%,
        gray <%- scoreMetricBarEndPercentage(quality.maintainabilityScore) %>% 100%
    );
}

#QualityDocumentation .QualityMetrics__ScoreMetric__Bar__Start {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarStartPercentage(quality.documentationScore) %>%,
        gray <%- scoreMetricBarStartPercentage(quality.documentationScore) %>% 100%
    );
}
#QualityDocumentation .QualityMetrics__ScoreMetric__Bar__Middle {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarMiddlePercentage(quality.documentationScore) %>%,
        gray <%- scoreMetricBarMiddlePercentage(quality.documentationScore) %>% 100%
    );
}
#QualityDocumentation .QualityMetrics__ScoreMetric__Bar__End {
    background: linear-gradient(
        to right,
        green 0% <%- scoreMetricBarEndPercentage(quality.documentationScore) %>%,
        gray <%- scoreMetricBarEndPercentage(quality.documentationScore) %>% 100%
    );
}
</style>