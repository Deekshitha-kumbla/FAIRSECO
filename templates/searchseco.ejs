<%
    searchseco.methods = searchseco.methods.sort((a, b) => { return b.matches.length - a.matches.length; });
    searchseco.vulnerableMethodCount = 0;
    for (let i = 0; i < searchseco.methods.length; i++) {
        let method = searchseco.methods[i];

        for (const match of method.matches) {
            if (match.vuln.code !== -1) {
                method.vulnerable = true;
                searchseco.vulnerableMethodCount++;
                break;
            }
        }
    }
%>

<div class="SearchSeco Hidden">
    <div class="SearchSeco__Nav">
        <button class="SearchSeco__Nav__Tab" onClick="searchSecoShowMethods()" data-linked-class="SearchSeco__Methods"><i class="fa-solid fa-file-code"></i> Methods</button>
        <button class="SearchSeco__Nav__Tab" data-linked-class="SearchSeco__Projects"><i class="fa-solid fa-box-archive"></i> Projects</button>
        <button class="SearchSeco__Nav__Tab" onClick="searchSecoShowVulnerableMethods()" data-linked-class="SearchSeco__Vulnerabilities"><i class="fa-solid fa-file-circle-exclamation"></i> Vulnerabilities</button>
    </div>
    <div class="SearchSeco__Methods">
        <h1><%- searchseco.methods.length %> of your methods found matches</h1>
        <p>Showing vulnerable methods only (<%- searchseco.vulnerableMethodCount %>)</p>
        <% for (const method of searchseco.methods) { %>
        <%- include('searchseco-method', { "method": method }); %>
        <% } %>
    </div>
    <div class="SearchSeco__Projects">
        
    </div>
</div>

<style>
    .SearchSeco {
        width: 100%;
        height: 76%;
        -webkit-mask-image: linear-gradient( to bottom, black 90%, transparent 100% );
        mask-image: linear-gradient(to bottom, black 90%, transparent 100%);
        overflow: hidden scroll;
        word-break: break-word;
    }

    .SearchSeco__Methods {
        width: 98%;
        margin: 1%;
    }
    .SearchSeco__Methods--HideNonVulnerable > .SearchSeco__Method--NotVulnerable {
        display: none
    }
    .SearchSeco__Methods > p {
        display: none
    }
    .SearchSeco__Methods--HideNonVulnerable > p {
        display: block
    }
    .SearchSeco__Methods h1 {
        font-size: 1.75vw;
    }

    .SearchSeco__Method__Header {
        color: #D9F8DF;
        font-size: 0.9vw;
        background-color: #47715A;
        border: 1px solid #779C7E;
        border-radius: 7px;
        padding: 5px;
        padding-left: calc(1.8vw + 5px);
        margin-top: 5px;
        margin-bottom: 5px;
    }
    .SearchSeco__Method__Header__Start {
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }
    .SearchSeco__Method__Header h1 {
        font-size: 1.2vw;
    }
    .SearchSeco__Method__Header h1 i {
        font-size: 1.5vw;
        width: 1.8vw;
        margin-left: -1.8vw;
        text-align: center;
    }
    .SearchSeco__Method__Header h1 i:hover {
        color: #b8d7cc;
        cursor: pointer;
    }
    .SearchSeco__Method__Header span {
        color: yellow;
    }
    .SearchSeco__Method__MatchList {
        width: 95%;
        margin-left: 5%;
    }

    .SearchSeco__Match {
        color: #D9F8DF;
        font-size: 0.75vw;
        background-color: #47715A;
        border: 1px solid #779C7E;
        border-radius: 7px;
        padding: 5px;
        padding-left: calc(1.8vw + 5px);
        margin-top: 5px;
        margin-bottom: 5px;
    }
    .SearchSeco__Match span {
        color: yellow;
    }
    .SearchSeco__Match__Header {
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }
    .SearchSeco__Match__Header h2 {
        font-size: 1vw;
    }
    .SearchSeco__Match__Header h2 i {
        font-size: 1.25vw;
        width: 1.5vw;
        margin-left: -1.5vw;
        text-align: center;
    }
    .SearchSeco__Match__Header h2 i:hover {
        color: #b8d7cc;
        cursor: pointer;
    }
</style>

<script>
    function searchSecoShowVulnerableMethods() {
        document.querySelector(".SearchSeco__Methods").classList.add("SearchSeco__Methods--HideNonVulnerable");
    }

    function searchSecoShowMethods() {
        document.querySelector(".SearchSeco__Methods").classList.remove("SearchSeco__Methods--HideNonVulnerable");
    }

    function searchSecoClickArrow(event) {
        event.target.classList.toggle("fa-angle-right");
        event.target.classList.toggle("fa-angle-down");

        let elem = event.target;
        while (elem = elem.parentNode) {
            if (elem.classList?.contains("SearchSeco__ArrowOwner")) {
                let target = elem.querySelector(".SearchSeco__ArrowTarget");
                target.hidden = !target.hidden;
                break;
            }
        }
    }
</script>