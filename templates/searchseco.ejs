<%#
This program has been developed by students from the bachelor Computer Science at
Utrecht University within the Software Project course.
Â© Copyright Utrecht University (Department of Information and Computing Sciences)
 %>

<%
    if (searchseco === undefined) {
        throw new Error("Missing SearchSECO data2 ");
    }


    // Sort the methods by amount of matches
    searchseco.methods = searchseco.methods.sort((a, b) => { return b.matches.length - a.matches.length; });

    // Count the matches and vulnerable methods and matches
    searchseco.matchCount = 0;
    searchseco.vulnerableMethodCount = 0;
    searchseco.vulnerableMatchCount = 0;
    for (let i = 0; i < searchseco.methods.length; i++) {
        let method = searchseco.methods[i];

        // Count matches
        searchseco.matchCount += method.matches.length;

        // Check every match of this method for vulnerabilities
        for (const match of method.matches) {
            if (match.vuln.code !== -1) {
                searchseco.vulnerableMatchCount++;

                // Mark method as vulnerable if it has a match with a vulnerability
                if (method.vulnerable !== true) {
                    method.vulnerable = true;
                    searchseco.vulnerableMethodCount++;
                }
            }
        }
    }

    // Get per-project data
    searchseco.projects = {};
    searchseco.vulnerableProjectCount = 0;
    for (const method of searchseco.methods) {
        for (const match of method.matches) {
            let project = match.data.project;

            // Add each unique project found in matches and keep track of its matches
            let matchInfo = { yourMethod: method, match: match };
            if (searchseco.projects[project] === undefined) {
                searchseco.projects[project] = { name: project, matches: [matchInfo] };
            } else {
                searchseco.projects[project].matches.push(matchInfo);
            }

            // Mark and count projects with a match with a vulnerability
            if (match.vuln.code !== -1) {
                searchseco.projects[project].vulnerable = true;
                searchseco.vulnerableProjectCount++;
            }
        }
    }
    searchseco.projects = Object.values(searchseco.projects);
    for (const project of searchseco.projects) {
        // Sort matches in each project by your methods they match with, by match count of that method
        project.matches.sort((a, b) => { return b.yourMethod.matches.length - a.yourMethod.matches.length; });
    }
    // Sort projects by amount of matches
    searchseco.projects = searchseco.projects.sort((a, b) => { return b.matches.length - a.matches.length; });
%>

<div class="SearchSECO Hidden">
    <h1>Total matches: <%- searchseco.matchCount %></h1>
    <div class="SearchSECO__Nav">
        <button class="SearchSECO__Nav__Button--Active" id="SearchSECO__MethodsButton" onClick="searchsecoShowMethods()" data-linked-class="SearchSECO__Methods"><i class="fa-solid fa-file-code"></i> Methods</button>
        <button id="SearchSECO__ProjectsButton" onClick="searchsecoShowProjects()" data-linked-class="SearchSECO__Projects"><i class="fa-solid fa-box-archive"></i> Projects</button>
        <div style="display: flex; flex-direction: row; align-items: center">
            <input type="checkbox" id="SearchSECO_ToggleShowVulnerable" onclick="searchsecoToggleShowVulnerabilities()"<% if (searchseco.vulnerableMethodCount === 0) { %> disabled<% } %>>
            <label for="SearchSECO_ToggleShowVulnerable">Show vulnerabilities only<br><%- searchseco.vulnerableMatchCount %> match<% if (searchseco.vulnerableMatchCount !== 1) { %>es<% } %> / <%- searchseco.vulnerableMethodCount %> method<% if (searchseco.vulnerableMethodCount !== 1) { %>s<% } %> / <%- searchseco.vulnerableProjectCount %> project<% if (searchseco.vulnerableProjectCount !== 1) { %>s<% } %></label>
        </div>
    </div>
    <div class="SearchSECO__List SearchSECO__MethodList">
        <p><%- searchseco.methods.length %> of your methods found matches</p>

        <% for (const method of searchseco.methods) { %>
        <%- include('searchseco-method', { "method": method }); %>
        <% } %>
    </div>
    <div class="SearchSECO__List SearchSECO__ProjectList" hidden>
        <p>Your methods found matches with <%- searchseco.projects.length %> project<% if (searchseco.projects.length !== 1) { %>s<% } %></p>

        <% for (const project of searchseco.projects) { %>
        <%- include('searchseco-project', { "project": project }); %>
        <% } %>
    </div>
</div>

<style>
    .SearchSECO {
        width: 100%;
        height: 70%;
        -webkit-mask-image: linear-gradient( to bottom, black 90%, transparent 100% );
        mask-image: linear-gradient(to bottom, black 90%, transparent 100%);
        overflow: hidden scroll;
        word-break: break-word;
        padding: 16px;
    }
    
    .SearchSECO--HideNonVulnerable .SearchSECO--NotVulnerable {
        display: none;
    }

    .SearchSECO__Nav {
        display: flex;
        flex-direction: row;
        align-items: center;
        margin-left: 1%;
    }
    .SearchSECO__Nav > * {
        margin-right: 0.6vw;
        font-size: 1vw;
    }
    .SearchSECO__Nav button {
        padding: 0.5vw;
        border: 1px solid #779C7E;
        background: transparent;
        border-radius: 8px;
        color: #D9F8DF;
        cursor: pointer;
        transition: all 300ms ease;
    }
    .SearchSECO__Nav button.SearchSECO__Nav__Button--Active {
        background: #D9F8DF;
        color: #0C281E;
        border: 1px solid #D9F8DF;

    }
    .SearchSECO__Nav input {
        width: 1.15vw;
        height: 1.15vw;
    }
    .SearchSECO__Nav label {
        color: #D9F8DF;
        font-size: 0.8vw;
        margin-left: 0.4vw;
    }

    .SearchSECO__List {
        width: 98%;
        margin: 1%;
    }
    .SearchSECO__List h1 {
        font-size: 1.7vw;
    }

    .SearchSECO__ListObject__Header {
        color: #D9F8DF;
        font-size: 0.8rem;
        border: 1px solid #779C7E;
        border-radius: 7px;
        padding: 8px;
        padding-left: calc(1.8vw + 5px);
        margin-top: 5px;
        margin-bottom: 5px;
    }
    .SearchSECO__ListObject__Header__Start {
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }
    .SearchSECO__ListObject__Header h1 {
        font-size: 1.1rem;
    }
    .SearchSECO__ListObject__Header p, .SearchSECO__ListObject__Header h1 {
        margin: 0;
    }
    .SearchSECO__ListObject__Header h1 i {
        font-size: 1.5vw;
        width: 1.8vw;
        margin-left: -1.8vw;
        text-align: center;
    }
    .SearchSECO__ListObject__Header h1 i:hover {
        color: #b8d7cc;
        cursor: pointer;
    }
  
    .SearchSECO__ListObject__Header span {
        margin-right: 1.5vw;
        color: #fcec69;
    }
    .SearchSECO__ListObject__MatchList {
        width: 95%;
        margin-left: 5%;
    }

    .SearchSECO__Match {
        color: #D9F8DF;
        font-size: 0.7rem;
        border: 1px solid #779C7E;
        border-radius: 7px;
        padding: 12px;
        margin-top: 5px;
        margin-bottom: 5px;
    }
    .SearchSECO__Match span {
        color: #fcec69;
    }
    .SearchSECO__Match__Header {
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }
    .SearchSECO__Match__Header h2 {
        font-size: 1rem;
        margin: 0;
    }
    .SearchSECO__Match h3 {
        font-size: 0.9rem;
        margin: 0;
    }
    .SearchSECO__Match a {
        color: #D9F8DF; 
    }
</style>

<script>
    const searchseco = document.querySelector(".SearchSECO");
    const searchsecoMethodsButton = document.getElementById("SearchSECO__MethodsButton");
    const searchsecoProjectsButton = document.getElementById("SearchSECO__ProjectsButton");
    const searchsecoMethodList = document.querySelector(".SearchSECO__MethodList");
    const searchsecoProjectList = document.querySelector(".SearchSECO__ProjectList");

    function searchsecoToggleShowVulnerabilities() {
        searchseco.classList.toggle("SearchSECO--HideNonVulnerable");
    }

    function searchsecoShowMethods() {
        searchsecoProjectList.hidden = true;
        searchsecoMethodList.hidden = false;
        
        searchsecoProjectsButton.classList.remove("SearchSECO__Nav__Button--Active");
        searchsecoMethodsButton.classList.add("SearchSECO__Nav__Button--Active");
    }

    function searchsecoShowProjects() {
        searchsecoMethodList.hidden = true;
        searchsecoProjectList.hidden = false;
        
        searchsecoMethodsButton.classList.remove("SearchSECO__Nav__Button--Active");
        searchsecoProjectsButton.classList.add("SearchSECO__Nav__Button--Active");
    }

    function searchSecoClickArrow(event) {
      
        event.target.classList.toggle("fa-angle-right");
        event.target.classList.toggle("fa-angle-down");

        let elem = event.target;
        while (elem = elem.parentNode) {
         
            if (elem.classList?.contains("SearchSECO__ArrowOwner")) {
                let target = elem.querySelector(".SearchSECO__ArrowTarget");
                target.hidden = !target.hidden;
                break;
            }
        }
    }

</script>